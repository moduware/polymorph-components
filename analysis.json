{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`morph-element`\nParent for all of Polymorph Components that can detect current platform and other common behaviour",
      "summary": "",
      "path": "morph-element/morph-element.html",
      "properties": [
        {
          "name": "platform",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 26,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"unknown\""
        }
      ],
      "methods": [
        {
          "name": "checkIfSharedStylesConnected",
          "description": "checkIfSharedStylesConnected",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "return true if style not equal to 'deepskyblue' meaning shared color file not connected and returns false otherwise"
          }
        },
        {
          "name": "getStyleShadyOrDOM",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 78,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object",
            "desc": "returns the computed style based on if ShadyCSS is used or not"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 4
        },
        "end": {
          "line": 80,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "MorphElement",
      "attributes": [
        {
          "name": "platform",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 26,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "morph-element"
    },
    {
      "description": "`morph-element`\nParent for all of Polymorph Components that can detect current platform and other common behaviour",
      "summary": "",
      "path": "morph-element/morph-element.html",
      "properties": [],
      "methods": [],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 32
        },
        "end": {
          "line": 22,
          "column": 64
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": []
    },
    {
      "description": "`morph-button`\nButton that morphs for current mobile OS",
      "summary": "",
      "path": "morph-button/morph-button.html",
      "properties": [
        {
          "name": "platform",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/morph-element/morph-element.html",
            "start": {
              "line": 26,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"unknown\"",
          "inheritedFrom": "MorphElement"
        },
        {
          "name": "big",
          "type": "boolean",
          "description": "Common for both platforms",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 232,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "filled",
          "type": "boolean",
          "description": "Common for both platforms",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "color",
          "type": "string",
          "description": "Common for both platforms",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"colorAssigned\""
            }
          },
          "defaultValue": "\"blue\""
        },
        {
          "name": "link",
          "type": "string",
          "description": "Common for both platforms",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 10
            },
            "end": {
              "line": 250,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "target",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 10
            },
            "end": {
              "line": 251,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "relation",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 252,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "active",
          "type": "boolean",
          "description": "iOS specific property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 255,
              "column": 10
            },
            "end": {
              "line": 259,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "rounded",
          "type": "boolean",
          "description": "iOS specific property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 266,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "raised",
          "type": "boolean",
          "description": "Android specific property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 10
            },
            "end": {
              "line": 273,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "checkIfSharedStylesConnected",
          "description": "checkIfSharedStylesConnected",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/morph-element/morph-element.html",
            "start": {
              "line": 57,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "return true if style not equal to 'deepskyblue' meaning shared color file not connected and returns false otherwise"
          },
          "inheritedFrom": "MorphElement"
        },
        {
          "name": "getStyleShadyOrDOM",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/morph-element/morph-element.html",
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 78,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object",
            "desc": "returns the computed style based on if ShadyCSS is used or not"
          },
          "inheritedFrom": "MorphElement"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 277,
              "column": 6
            },
            "end": {
              "line": 311,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "colorAssigned",
          "description": "colorAssigned function will fire a console.warn message depending on wether the standard color red gray and green were used",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 321,
              "column": 6
            },
            "end": {
              "line": 327,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "oldValue",
              "type": "[any]",
              "description": "old value of color property"
            },
            {
              "name": "newValue",
              "type": "any",
              "description": "new value of color property"
            }
          ],
          "return": {
            "type": "String",
            "desc": "gives a console warn message when shared-colors is not included"
          }
        },
        {
          "name": "checkIfStandardColorUsed",
          "description": "checkIfStandardColorUsed checks if standard colors were used",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 6
            },
            "end": {
              "line": 341,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "oldValue",
              "type": "String",
              "description": "old value of the color property from its observer"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "returns true if oldValue is equal to color red, gray or green else returns false"
          }
        },
        {
          "name": "showRipple",
          "description": "showRipple gives material design-like ripple effect when buttons are click",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 6
            },
            "end": {
              "line": 372,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Object",
              "description": "the button element that the event key down or finger down has happen"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "returns the style attribute of the button element with corresponding css styling related to the ripple effect"
          }
        },
        {
          "name": "cleanUp",
          "description": "clean up the container for the ripple effect",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 377,
              "column": 6
            },
            "end": {
              "line": 381,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "morph-button/demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 223,
          "column": 4
        },
        "end": {
          "line": 383,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "MorphButton",
      "attributes": [
        {
          "name": "platform",
          "description": "",
          "sourceRange": {
            "file": "../bower_components/morph-element/morph-element.html",
            "start": {
              "line": 26,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "MorphElement"
        },
        {
          "name": "big",
          "description": "Common for both platforms",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 10
            },
            "end": {
              "line": 232,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "filled",
          "description": "Common for both platforms",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 10
            },
            "end": {
              "line": 239,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "color",
          "description": "Common for both platforms",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 10
            },
            "end": {
              "line": 247,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "link",
          "description": "Common for both platforms",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 10
            },
            "end": {
              "line": 250,
              "column": 22
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "target",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 10
            },
            "end": {
              "line": 251,
              "column": 24
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "relation",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 10
            },
            "end": {
              "line": 252,
              "column": 26
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "active",
          "description": "iOS specific property",
          "sourceRange": {
            "start": {
              "line": 255,
              "column": 10
            },
            "end": {
              "line": 259,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "rounded",
          "description": "iOS specific property",
          "sourceRange": {
            "start": {
              "line": 262,
              "column": 10
            },
            "end": {
              "line": 266,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "raised",
          "description": "Android specific property",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 10
            },
            "end": {
              "line": 273,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "morph-button/morph-button.html",
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 209,
              "column": 19
            }
          }
        }
      ],
      "tagname": "morph-button"
    },
    {
      "description": "`morph-view`\nView where we put all our elements",
      "summary": "",
      "path": "morph-view/morph-view.html",
      "properties": [
        {
          "name": "platform",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../morph-element/morph-element.html",
            "start": {
              "line": 26,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"unknown\"",
          "inheritedFrom": "MorphElement"
        },
        {
          "name": "reveal",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "checkIfSharedStylesConnected",
          "description": "checkIfSharedStylesConnected",
          "privacy": "public",
          "sourceRange": {
            "file": "../morph-element/morph-element.html",
            "start": {
              "line": 57,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "return true if style not equal to 'deepskyblue' meaning shared color file not connected and returns false otherwise"
          },
          "inheritedFrom": "MorphElement"
        },
        {
          "name": "getStyleShadyOrDOM",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../morph-element/morph-element.html",
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 78,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object",
            "desc": "returns the computed style based on if ShadyCSS is used or not"
          },
          "inheritedFrom": "MorphElement"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 66,
          "column": 4
        },
        "end": {
          "line": 76,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "MorphView",
      "attributes": [
        {
          "name": "platform",
          "description": "",
          "sourceRange": {
            "file": "../morph-element/morph-element.html",
            "start": {
              "line": 26,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "MorphElement"
        },
        {
          "name": "reveal",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 10
            },
            "end": {
              "line": 73,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "morph-view/morph-view.html",
            "start": {
              "line": 53,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 17
            }
          }
        }
      ],
      "tagname": "morph-view"
    },
    {
      "description": "`app-drawer-morph-element`\nA navigation drawer that can slide in from the left or right and that morphs for current mobile OS",
      "summary": "",
      "path": "morph-builder/app-drawer-morph-element.html",
      "properties": [
        {
          "name": "opened",
          "type": "boolean",
          "description": "The opened state of the drawer.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 192,
              "column": 8
            },
            "end": {
              "line": 197,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "persistent",
          "type": "boolean",
          "description": "The drawer does not have a scrim and cannot be swiped close.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 202,
              "column": 8
            },
            "end": {
              "line": 206,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "transitionDuration",
          "type": "number",
          "description": "The transition duration of the drawer in milliseconds.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 211,
              "column": 8
            },
            "end": {
              "line": 214,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "200"
        },
        {
          "name": "align",
          "type": "string",
          "description": "The alignment of the drawer on the screen ('left', 'right', 'start' or 'end').\n'start' computes to left and 'end' to right in LTR layout and vice versa in RTL\nlayout.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 221,
              "column": 8
            },
            "end": {
              "line": 224,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"left\""
        },
        {
          "name": "position",
          "type": "string",
          "description": "The computed, read-only position of the drawer on the screen ('left' or 'right').",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 229,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "swipeOpen",
          "type": "boolean",
          "description": "Create an area at the edge of the screen to swipe open the drawer.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 238,
              "column": 8
            },
            "end": {
              "line": 242,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "noFocusTrap",
          "type": "boolean",
          "description": "Trap keyboard focus when the drawer is opened and not persistent.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 247,
              "column": 8
            },
            "end": {
              "line": 250,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "disableSwipe",
          "type": "boolean",
          "description": "Disables swiping on the drawer.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 255,
              "column": 8
            },
            "end": {
              "line": 258,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_translateOffset",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 268,
              "column": 6
            },
            "end": {
              "line": 268,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_trackDetails",
          "type": "object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 270,
              "column": 6
            },
            "end": {
              "line": 270,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_drawerState",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 272,
              "column": 6
            },
            "end": {
              "line": 272,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_boundEscKeydownHandler",
          "type": "object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 274,
              "column": 6
            },
            "end": {
              "line": 274,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_firstTabStop",
          "type": "object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 276,
              "column": 6
            },
            "end": {
              "line": 276,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_lastTabStop",
          "type": "object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 278,
              "column": 6
            },
            "end": {
              "line": 278,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_MIN_FLING_THRESHOLD",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 656,
              "column": 6
            },
            "end": {
              "line": 656,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_MIN_TRANSITION_VELOCITY",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 658,
              "column": 6
            },
            "end": {
              "line": 658,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_FLING_TIMING_FUNCTION",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 660,
              "column": 6
            },
            "end": {
              "line": 660,
              "column": 64
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_FLING_INITIAL_SLOPE",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 662,
              "column": 6
            },
            "end": {
              "line": 662,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_DRAWER_STATE",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 664,
              "column": 6
            },
            "end": {
              "line": 671,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "platform",
          "type": "string",
          "description": "Detects the platform if it is either  - 'ios', 'android' or 'windows-phone' or if none of the 3 were identified returns 'unkown'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 24,
              "column": 12
            },
            "end": {
              "line": 27,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 280,
              "column": 6
            },
            "end": {
              "line": 291,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 293,
              "column": 6
            },
            "end": {
              "line": 295,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "open",
          "description": "Opens the drawer.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 300,
              "column": 6
            },
            "end": {
              "line": 302,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "close",
          "description": "Closes the drawer.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 307,
              "column": 6
            },
            "end": {
              "line": 309,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "toggle",
          "description": "Toggles the drawer open and close.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 314,
              "column": 6
            },
            "end": {
              "line": 316,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "getWidth",
          "description": "Gets the width of the drawer.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 325,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "number",
            "desc": "The width of the drawer in pixels."
          }
        },
        {
          "name": "_isRTL",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 327,
              "column": 6
            },
            "end": {
              "line": 329,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_resetPosition",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 331,
              "column": 6
            },
            "end": {
              "line": 341,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_escKeydownHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 343,
              "column": 6
            },
            "end": {
              "line": 350,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_track",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 352,
              "column": 6
            },
            "end": {
              "line": 371,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_trackStart",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 373,
              "column": 6
            },
            "end": {
              "line": 389,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_trackMove",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 391,
              "column": 6
            },
            "end": {
              "line": 400,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_trackEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 402,
              "column": 6
            },
            "end": {
              "line": 438,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_calculateVelocity",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 440,
              "column": 6
            },
            "end": {
              "line": 466,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            },
            {
              "name": "trackDetails"
            }
          ]
        },
        {
          "name": "_flingDrawer",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 468,
              "column": 6
            },
            "end": {
              "line": 510,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            },
            {
              "name": "trackDetails"
            }
          ]
        },
        {
          "name": "_styleTransitionDuration",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 512,
              "column": 6
            },
            "end": {
              "line": 516,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "duration"
            }
          ]
        },
        {
          "name": "_styleTransitionTimingFunction",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 518,
              "column": 6
            },
            "end": {
              "line": 521,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timingFunction"
            }
          ]
        },
        {
          "name": "_translateDrawer",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 523,
              "column": 6
            },
            "end": {
              "line": 535,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "x"
            }
          ]
        },
        {
          "name": "_resetDrawerTranslate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 537,
              "column": 6
            },
            "end": {
              "line": 540,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_resetDrawerState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 542,
              "column": 6
            },
            "end": {
              "line": 576,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "resetLayout",
          "description": "Resets the layout.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 583,
              "column": 6
            },
            "end": {
              "line": 585,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_setKeyboardFocusTrap",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 587,
              "column": 6
            },
            "end": {
              "line": 625,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_tabKeydownHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 627,
              "column": 6
            },
            "end": {
              "line": 646,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_openedPersistentChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 648,
              "column": 6
            },
            "end": {
              "line": 654,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened"
            },
            {
              "name": "persistent"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 6
        },
        "end": {
          "line": 55,
          "column": 7
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "AppDrawerMorphElement",
      "attributes": [
        {
          "name": "opened",
          "description": "The opened state of the drawer.",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 192,
              "column": 8
            },
            "end": {
              "line": 197,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "persistent",
          "description": "The drawer does not have a scrim and cannot be swiped close.",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 202,
              "column": 8
            },
            "end": {
              "line": 206,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "transition-duration",
          "description": "The transition duration of the drawer in milliseconds.",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 211,
              "column": 8
            },
            "end": {
              "line": 214,
              "column": 9
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "align",
          "description": "The alignment of the drawer on the screen ('left', 'right', 'start' or 'end').\n'start' computes to left and 'end' to right in LTR layout and vice versa in RTL\nlayout.",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 221,
              "column": 8
            },
            "end": {
              "line": 224,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "position",
          "description": "The computed, read-only position of the drawer on the screen ('left' or 'right').",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 229,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "swipe-open",
          "description": "Create an area at the edge of the screen to swipe open the drawer.",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 238,
              "column": 8
            },
            "end": {
              "line": 242,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-focus-trap",
          "description": "Trap keyboard focus when the drawer is opened and not persistent.",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 247,
              "column": 8
            },
            "end": {
              "line": 250,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "disable-swipe",
          "description": "Disables swiping on the drawer.",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 255,
              "column": 8
            },
            "end": {
              "line": 258,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "platform",
          "description": "Detects the platform if it is either  - 'ios', 'android' or 'windows-phone' or if none of the 3 were identified returns 'unkown'",
          "sourceRange": {
            "start": {
              "line": 24,
              "column": 12
            },
            "end": {
              "line": 27,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "app-drawer-transitioned",
          "description": "app-drawer-transitioned",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "app-reset-layout",
          "description": "app-reset-layout",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "opened-changed",
          "description": "Fired when the `opened` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "app-drawer-morph-element"
    },
    {
      "description": "`morph-sidebar`\nA navigation drawer that can slide in from the left or right and that morphs for current mobile OS",
      "summary": "",
      "path": "morph-sidebar/morph-sidebar.html",
      "properties": [
        {
          "name": "opened",
          "type": "boolean",
          "description": "The opened state of the drawer.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 192,
              "column": 8
            },
            "end": {
              "line": 197,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "persistent",
          "type": "boolean",
          "description": "The drawer does not have a scrim and cannot be swiped close.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 202,
              "column": 8
            },
            "end": {
              "line": 206,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "transitionDuration",
          "type": "number",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 12
            },
            "end": {
              "line": 57,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "align",
          "type": "string",
          "description": "The alignment of the drawer on the screen ('left', 'right', 'start' or 'end').\n'start' computes to left and 'end' to right in LTR layout and vice versa in RTL\nlayout.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 221,
              "column": 8
            },
            "end": {
              "line": 224,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"left\"",
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "position",
          "type": "string",
          "description": "The computed, read-only position of the drawer on the screen ('left' or 'right').",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 229,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "swipeOpen",
          "type": "boolean",
          "description": "Create an area at the edge of the screen to swipe open the drawer.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 238,
              "column": 8
            },
            "end": {
              "line": 242,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "noFocusTrap",
          "type": "boolean",
          "description": "Trap keyboard focus when the drawer is opened and not persistent.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 247,
              "column": 8
            },
            "end": {
              "line": 250,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "disableSwipe",
          "type": "boolean",
          "description": "Disables swiping on the drawer.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 255,
              "column": 8
            },
            "end": {
              "line": 258,
              "column": 9
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_translateOffset",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 268,
              "column": 6
            },
            "end": {
              "line": 268,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_trackDetails",
          "type": "object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 270,
              "column": 6
            },
            "end": {
              "line": 270,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_drawerState",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 272,
              "column": 6
            },
            "end": {
              "line": 272,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_boundEscKeydownHandler",
          "type": "object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 274,
              "column": 6
            },
            "end": {
              "line": 274,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_firstTabStop",
          "type": "object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 276,
              "column": 6
            },
            "end": {
              "line": 276,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_lastTabStop",
          "type": "object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 278,
              "column": 6
            },
            "end": {
              "line": 278,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_MIN_FLING_THRESHOLD",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 656,
              "column": 6
            },
            "end": {
              "line": 656,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_MIN_TRANSITION_VELOCITY",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 658,
              "column": 6
            },
            "end": {
              "line": 658,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_FLING_TIMING_FUNCTION",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 660,
              "column": 6
            },
            "end": {
              "line": 660,
              "column": 64
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_FLING_INITIAL_SLOPE",
          "type": "number",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 662,
              "column": 6
            },
            "end": {
              "line": 662,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_DRAWER_STATE",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 664,
              "column": 6
            },
            "end": {
              "line": 671,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "platform",
          "type": "string",
          "description": "Detects the platform if it is either  - 'ios', 'android' or 'windows-phone' or if none of the 3 were identified returns 'unkown'",
          "privacy": "public",
          "sourceRange": {
            "file": "../morph-builder/app-drawer-morph-element.html",
            "start": {
              "line": 24,
              "column": 12
            },
            "end": {
              "line": 27,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "transitionDurationAndroid",
          "type": "number",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 12
            },
            "end": {
              "line": 61,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "300"
        },
        {
          "name": "transitionDurationIos",
          "type": "number",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 12
            },
            "end": {
              "line": 65,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "400"
        },
        {
          "name": "transitionDurationWeb",
          "type": "number",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 12
            },
            "end": {
              "line": 69,
              "column": 13
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "200"
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 280,
              "column": 6
            },
            "end": {
              "line": 291,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 293,
              "column": 6
            },
            "end": {
              "line": 295,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "open",
          "description": "Opens the drawer.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 300,
              "column": 6
            },
            "end": {
              "line": 302,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "close",
          "description": "Closes the drawer.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 307,
              "column": 6
            },
            "end": {
              "line": 309,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "toggle",
          "description": "Toggles the drawer open and close.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 314,
              "column": 6
            },
            "end": {
              "line": 316,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "getWidth",
          "description": "Gets the width of the drawer.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 323,
              "column": 6
            },
            "end": {
              "line": 325,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "number",
            "desc": "The width of the drawer in pixels."
          },
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_isRTL",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 327,
              "column": 6
            },
            "end": {
              "line": 329,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_resetPosition",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 331,
              "column": 6
            },
            "end": {
              "line": 341,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_escKeydownHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 343,
              "column": 6
            },
            "end": {
              "line": 350,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_track",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 352,
              "column": 6
            },
            "end": {
              "line": 371,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_trackStart",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 373,
              "column": 6
            },
            "end": {
              "line": 389,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_trackMove",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 391,
              "column": 6
            },
            "end": {
              "line": 400,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_trackEnd",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 402,
              "column": 6
            },
            "end": {
              "line": 438,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_calculateVelocity",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 440,
              "column": 6
            },
            "end": {
              "line": 466,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            },
            {
              "name": "trackDetails"
            }
          ],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_flingDrawer",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 468,
              "column": 6
            },
            "end": {
              "line": 510,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            },
            {
              "name": "trackDetails"
            }
          ],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_styleTransitionDuration",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 512,
              "column": 6
            },
            "end": {
              "line": 516,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "duration"
            }
          ],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_styleTransitionTimingFunction",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 518,
              "column": 6
            },
            "end": {
              "line": 521,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "timingFunction"
            }
          ],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_translateDrawer",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 523,
              "column": 6
            },
            "end": {
              "line": 535,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "x"
            }
          ],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_resetDrawerTranslate",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 537,
              "column": 6
            },
            "end": {
              "line": 540,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_resetDrawerState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 542,
              "column": 6
            },
            "end": {
              "line": 576,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "resetLayout",
          "description": "Resets the layout.",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 583,
              "column": 6
            },
            "end": {
              "line": 585,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_setKeyboardFocusTrap",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 587,
              "column": 6
            },
            "end": {
              "line": 625,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_tabKeydownHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 627,
              "column": 6
            },
            "end": {
              "line": 646,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "_openedPersistentChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 648,
              "column": 6
            },
            "end": {
              "line": 654,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened"
            },
            {
              "name": "persistent"
            }
          ],
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "computedTransitionDuration",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 8
            },
            "end": {
              "line": 103,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "platform"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "morph-sidebar/demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 51,
          "column": 6
        },
        "end": {
          "line": 105,
          "column": 7
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "MorphSidebar",
      "attributes": [
        {
          "name": "opened",
          "description": "The opened state of the drawer.",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 192,
              "column": 8
            },
            "end": {
              "line": 197,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "persistent",
          "description": "The drawer does not have a scrim and cannot be swiped close.",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 202,
              "column": 8
            },
            "end": {
              "line": 206,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "transition-duration",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 12
            },
            "end": {
              "line": 57,
              "column": 13
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "align",
          "description": "The alignment of the drawer on the screen ('left', 'right', 'start' or 'end').\n'start' computes to left and 'end' to right in LTR layout and vice versa in RTL\nlayout.",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 221,
              "column": 8
            },
            "end": {
              "line": 224,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "position",
          "description": "The computed, read-only position of the drawer on the screen ('left' or 'right').",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 229,
              "column": 8
            },
            "end": {
              "line": 233,
              "column": 9
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "swipe-open",
          "description": "Create an area at the edge of the screen to swipe open the drawer.",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 238,
              "column": 8
            },
            "end": {
              "line": 242,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "no-focus-trap",
          "description": "Trap keyboard focus when the drawer is opened and not persistent.",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 247,
              "column": 8
            },
            "end": {
              "line": 250,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "disable-swipe",
          "description": "Disables swiping on the drawer.",
          "sourceRange": {
            "file": "../bower_components/app-layout/app-drawer/app-drawer.html",
            "start": {
              "line": 255,
              "column": 8
            },
            "end": {
              "line": 258,
              "column": 9
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "platform",
          "description": "Detects the platform if it is either  - 'ios', 'android' or 'windows-phone' or if none of the 3 were identified returns 'unkown'",
          "sourceRange": {
            "file": "../morph-builder/app-drawer-morph-element.html",
            "start": {
              "line": 24,
              "column": 12
            },
            "end": {
              "line": 27,
              "column": 13
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "name": "transition-duration-android",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 12
            },
            "end": {
              "line": 61,
              "column": 13
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "transition-duration-ios",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 12
            },
            "end": {
              "line": 65,
              "column": 13
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "transition-duration-web",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 12
            },
            "end": {
              "line": 69,
              "column": 13
            }
          },
          "metadata": {},
          "type": "number"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "app-drawer-transitioned",
          "description": "app-drawer-transitioned",
          "metadata": {},
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "type": "CustomEvent",
          "name": "app-reset-layout",
          "description": "app-reset-layout",
          "metadata": {},
          "inheritedFrom": "AppDrawerMorphElement"
        },
        {
          "type": "CustomEvent",
          "name": "opened-changed",
          "description": "Fired when the `opened` property changes.",
          "metadata": {},
          "inheritedFrom": "AppDrawerMorphElement"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "morph-sidebar"
    },
    {
      "description": "`morph-overlay`\n Overlay that morphs for current mobile OS",
      "summary": "",
      "path": "morph-overlay/morph-overlay.html",
      "properties": [
        {
          "name": "platform",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/morph-element/morph-element.html",
            "start": {
              "line": 26,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"unknown\"",
          "inheritedFrom": "MorphElement"
        },
        {
          "name": "open",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "checkIfSharedStylesConnected",
          "description": "checkIfSharedStylesConnected",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/morph-element/morph-element.html",
            "start": {
              "line": 57,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "return true if style not equal to 'deepskyblue' meaning shared color file not connected and returns false otherwise"
          },
          "inheritedFrom": "MorphElement"
        },
        {
          "name": "getStyleShadyOrDOM",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/morph-element/morph-element.html",
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 78,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object",
            "desc": "returns the computed style based on if ShadyCSS is used or not"
          },
          "inheritedFrom": "MorphElement"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "morph-overlay/demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 52,
          "column": 4
        },
        "end": {
          "line": 62,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "MorphOverlay",
      "attributes": [
        {
          "name": "platform",
          "description": "",
          "sourceRange": {
            "file": "../bower_components/morph-element/morph-element.html",
            "start": {
              "line": 26,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "MorphElement"
        },
        {
          "name": "open",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "morph-overlay"
    },
    {
      "description": "`morph-tabbar`\nTab bar for polymorph components",
      "summary": "",
      "path": "morph-tabbar/morph-tabbar.html",
      "properties": [
        {
          "name": "platform",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/morph-element/morph-element.html",
            "start": {
              "line": 26,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"unknown\"",
          "inheritedFrom": "MorphElement"
        },
        {
          "name": "selected",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 158,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "label",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "tabbarItems",
          "type": "Array",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 10
            },
            "end": {
              "line": 168,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        }
      ],
      "methods": [
        {
          "name": "checkIfSharedStylesConnected",
          "description": "checkIfSharedStylesConnected",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/morph-element/morph-element.html",
            "start": {
              "line": 57,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "return true if style not equal to 'deepskyblue' meaning shared color file not connected and returns false otherwise"
          },
          "inheritedFrom": "MorphElement"
        },
        {
          "name": "getStyleShadyOrDOM",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/morph-element/morph-element.html",
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 78,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object",
            "desc": "returns the computed style based on if ShadyCSS is used or not"
          },
          "inheritedFrom": "MorphElement"
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 6
            },
            "end": {
              "line": 182,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_processNewNodes",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "nodes"
            }
          ]
        },
        {
          "name": "_processRemovedNodes",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 6
            },
            "end": {
              "line": 224,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "nodes"
            }
          ]
        },
        {
          "name": "_setAndroidHighlightSizeByNumberOfElements",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 6
            },
            "end": {
              "line": 234,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "number"
            }
          ]
        },
        {
          "name": "_setAndroidHightlightPosition",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 236,
              "column": 6
            },
            "end": {
              "line": 238,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "position"
            }
          ]
        },
        {
          "name": "innerItemClickHandler",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 240,
              "column": 6
            },
            "end": {
              "line": 258,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "morph-tabbar/demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 150,
          "column": 4
        },
        "end": {
          "line": 259,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "MorphTabbar",
      "attributes": [
        {
          "name": "platform",
          "description": "",
          "sourceRange": {
            "file": "../bower_components/morph-element/morph-element.html",
            "start": {
              "line": 26,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "MorphElement"
        },
        {
          "name": "selected",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 158,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "label",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 10
            },
            "end": {
              "line": 164,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "tabbar-items",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 10
            },
            "end": {
              "line": 168,
              "column": 11
            }
          },
          "metadata": {},
          "type": "Array"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Fired when the `selected` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "label-changed",
          "description": "Fired when the `label` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "morph-tabbar/morph-tabbar.html",
            "start": {
              "line": 135,
              "column": 6
            },
            "end": {
              "line": 135,
              "column": 29
            }
          }
        }
      ],
      "tagname": "morph-tabbar"
    },
    {
      "description": "`morph-tabbar-item`\nTab bar item for polymorph components",
      "summary": "",
      "path": "morph-tabbar-item/morph-tabbar-item.html",
      "properties": [
        {
          "name": "platform",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/morph-element/morph-element.html",
            "start": {
              "line": 26,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"unknown\"",
          "inheritedFrom": "MorphElement"
        },
        {
          "name": "name",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 10
            },
            "end": {
              "line": 155,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "selectedImage",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 10
            },
            "end": {
              "line": 160,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "notSelectedImage",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 10
            },
            "end": {
              "line": 165,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "selected",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 10
            },
            "end": {
              "line": 171,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "label",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 10
            },
            "end": {
              "line": 177,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "checkIfSharedStylesConnected",
          "description": "checkIfSharedStylesConnected",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/morph-element/morph-element.html",
            "start": {
              "line": 57,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "return true if style not equal to 'deepskyblue' meaning shared color file not connected and returns false otherwise"
          },
          "inheritedFrom": "MorphElement"
        },
        {
          "name": "getStyleShadyOrDOM",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../bower_components/morph-element/morph-element.html",
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 78,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object",
            "desc": "returns the computed style based on if ShadyCSS is used or not"
          },
          "inheritedFrom": "MorphElement"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 223,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "selectedObserver",
          "description": "Observer for the changes of selected attribute.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 6
            },
            "end": {
              "line": 230,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "changes"
            }
          ]
        },
        {
          "name": "setImageSource",
          "description": "Sets up the image source based on the selected attribute.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 236,
              "column": 6
            },
            "end": {
              "line": 243,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "showRipple",
          "description": "showRipple gives material design-like ripple effect when buttons are click",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 6
            },
            "end": {
              "line": 275,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Object",
              "description": "the button element that the event key down or finger down has happen"
            }
          ],
          "return": {
            "type": "Object",
            "desc": "returns the style attribute of the button element with corresponding css styling related to the ripple effect"
          }
        },
        {
          "name": "cleanUp",
          "description": "Cleans up the container for the ripple effect",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 280,
              "column": 6
            },
            "end": {
              "line": 284,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "morph-tabbar-item/demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 147,
          "column": 4
        },
        "end": {
          "line": 285,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "MorphTabbarItem",
      "attributes": [
        {
          "name": "platform",
          "description": "",
          "sourceRange": {
            "file": "../bower_components/morph-element/morph-element.html",
            "start": {
              "line": 26,
              "column": 10
            },
            "end": {
              "line": 48,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "MorphElement"
        },
        {
          "name": "name",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 10
            },
            "end": {
              "line": 155,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "selected-image",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 10
            },
            "end": {
              "line": 160,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "not-selected-image",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 10
            },
            "end": {
              "line": 165,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "selected",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 10
            },
            "end": {
              "line": 171,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "label",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 10
            },
            "end": {
              "line": 177,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "name-changed",
          "description": "Fired when the `name` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-image-changed",
          "description": "Fired when the `selectedImage` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "not-selected-image-changed",
          "description": "Fired when the `notSelectedImage` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Fired when the `selected` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "label-changed",
          "description": "Fired when the `label` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "morph-tabbar-item/morph-tabbar-item.html",
            "start": {
              "line": 131,
              "column": 10
            },
            "end": {
              "line": 131,
              "column": 33
            }
          }
        }
      ],
      "tagname": "morph-tabbar-item"
    }
  ]
}
